//
// Copyright 2018, TeamDev Ltd. All rights reserved.
//
// Redistribution and use in source and/or binary gorms, with or without
// modification, must retain the above copyright notice and the following
// disclaimer.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//

syntax = "proto3";

package javaclasses.mealorder;

import "spine/options.proto";

option (type_url_prefix) = "type.javaclasses.mealorder";
option java_package = "io.javaclasses.mealorder";
option java_outer_classname = "IdentifiersProto";
option java_multiple_files = true;
option java_generate_equals_and_hash = true;


import "google/protobuf/timestamp.proto";
import "spine/net/email_address.proto";
import "spine/time/time.proto";

// An ID of a user.
//
// An identifier is represented by user email address.
//
message UserId {

    // User's e-mail.
    spine.net.EmailAddress email = 1;
}

// An ID of a vendor.
//
// An identifier is represented by vendor's name which is unique for each vendor.
//
message VendorId {

    // String representation of UUID.
    //
    // Automatically generated upon vendor creation.
    string value = 1;
}

// An ID of an order.
//
// An identifier is represented by vendor ID, user ID and order date.
//
message OrderId {

    // An identifier of a vendor.
    VendorId vendor_id = 1;

    // An identifier of a user who makes an order.
    UserId user_id = 2;

    // A date of an order.
    spine.time.LocalDate order_date = 3;
}

// An ID of a menu.
//
// An identifier is represented by vendor ID and imported time.
//
message MenuId {

    // An identifier of a vendor.
    VendorId vendor_id = 1;

    // Menu imported time.
    google.protobuf.Timestamp when_imported = 2;
}

// An ID of a dish.
//
// An identifier is represented by a dish sequential number in a menu and menu ID.
//
message DishId {

    // A sequence number of a dish in a menu.
    int32 sequential_number = 1;

    // An identifier of a menu.
    MenuId menu_id = 2;
}

// An ID of a purchase order, represented by vendor ID and purchase order date.
//
// An identifier is represented by vendor ID and purchase order date.
//
message PurchaseOrderId {

    // An identifier of a vendor.
    VendorId vendor_id = 1;

    // A date on which this purchase order is formed.
    google.protobuf.Timestamp po_date = 2;
}

// An ID of a menu list projection for UI role User.
//
message MenuListId {

    // Date on which the menu list is formed.
    spine.time.LocalDate date = 1;
}

// An ID of a order list projection for UI role User.
//
message OrderListId {

    // Date on which the order list is formed.
    spine.time.LocalDate order_date = 1;

    // An identifier of a user who made orders.
    UserId user_id = 2;
}
