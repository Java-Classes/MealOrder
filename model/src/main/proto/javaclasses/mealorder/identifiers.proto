//
// Copyright 2018, TeamDev Ltd. All rights reserved.
//
// Redistribution and use in source and/or binary gorms, with or without
// modification, must retain the above copyright notice and the following
// disclaimer.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
// "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//

syntax = "proto3";

package javaclasses.mealorder;

import "spine/options.proto";

option (type_url_prefix) = "type.javaclasses.mealorder";
option java_package = "javaclasses.mealorder";
option java_outer_classname = "IdentifiersProto";
option java_multiple_files = true;
option java_generate_equals_and_hash = true;

import "google/protobuf/timestamp.proto";
import "spine/net/email_address.proto";
import "spine/time/time.proto";
import "javaclasses/mealorder/attributes.proto";

// The ID of the vendor list.
//
message VendorListId {

    // The ID of the vendor list
    string value = 1;
}

// The ID of the purchase order list.
//
message PurchaseOrderListId {

    // The ID of the purchase order list.
    string value = 1;
}

// The ID of the calendar.
//
message MenuCalendarId {

    // The ID of the calendar.
    string value = 1;
}

// The ID of a user.
//
// Represented by the user's email address.
//
message UserId {

    // The user's email.
    spine.net.EmailAddress email = 1;
}

// The ID of a vendor.
//
message VendorId {

    // Represented by the vendor name value in the next form 'vendor:<`VendorName`>'.
    string value = 1;
}

// The ID of a order.
//
// Represented by the vendor ID, the user ID and the order date.
//
message OrderId {

    // The identifier of the vendor.
    VendorId vendor_id = 1;

    // The identifier of the user who makes an order.
    UserId user_id = 2;

    // The date of an order.
    spine.time.LocalDate order_date = 3;
}

// The ID of a menu.
//
// Represented by the vendor ID and time when imported.
//
message MenuId {

    // The identifier of the vendor.
    VendorId vendor_id = 1;

    // Was imported at this time.
    google.protobuf.Timestamp when_imported = 2;
}

// The ID of a dish.
//
// Represented by the dish sequential number in the menu and the menu ID.
//
message DishId {

    // The sequence number of a dish in the menu.
    int32 sequential_number = 1;

    // The identifier of the menu.
    MenuId menu_id = 2;
}

// The ID of a purchase order.
//
// Represented by the vendor ID and the purchase order date.
//
message PurchaseOrderId {

    // The identifier of the vendor.
    VendorId vendor_id = 1;

    // The date on which a purchase order is formed.
    spine.time.LocalDate po_date = 2;
}

// The ID of a menu list projection for UI role User.
//
message MenuListId {

    // The date on which the a list is formed.
    spine.time.LocalDate date = 1;
}

// The ID of an order list projection for UI role User.
//
message OrderListId {

    // The date on which an order list is formed.
    spine.time.LocalDate order_date = 1;

    // The identifier of the user who made orders.
    UserId user_id = 2;
}

// The ID of a monthly spendings report projection for UI role Admin.
//
message MonthlySpendingsReportId {

    // The month on which spendings are calculated.
    LocalMonth month = 1;
}
